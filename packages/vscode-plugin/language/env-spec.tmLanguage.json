{
  "scopeName": "source.env-spec",
  "patterns": [
    {
      "comment": "Full Line Comment",
      "match": "^\\s?(#.*$)\\n",
      "captures": {
        "1": {
          "patterns": [
            {
              "include": "#line-comment"
            }
          ]
        }
      }
    },
    {
      "comment": "ENV entry",
      "match": "^\\s?(.*?)\\s?(\\=)(.*)$",
      "captures": {
        "1": {
          "patterns": [
            {
              "include": "#key"
            }
          ]
        },
        "2": {
          "name": "keyword.operator.assignment.env-spec"
        },
        "3": {
          "name": "property.value.env-spec",
          "patterns": [
            {"include": "#single-quoted-string"},
            {"include": "#double-quoted-string"},
            {"include": "#backtick-quoted-string"},
            {"include": "#undefined-value"},
            {"include": "#boolean-value"},
            {"include": "#numeric-value"},
            {"include": "#interpolation"}
          ]
        }
      }
    }
  ],

  "repository": {
    "variable": {
      "comment": "env variable",
      "match": "[a-zA-Z_]+[a-zA-Z0-9_-]*"
    },
    "line-comment": {
      "comment": "Comment",
      "match": "#(.*)$",
      "name": "comment.line.env-spec",
      "captures": {
        "1": {
          "patterns": [
            {
              "comment": "Decorators section",
              "match": "\\s*(.*)(\\s*#.*)?",
              "captures": {
                "1": {
                  "patterns": [{"include": "#decorator"}]
                },
                "2": {
                  "name": "comment.line.env-spec"
                }
              }
            },
            {
              "comment": "Trailing comment",
              "match": "\\s+#(.*)$",
              "name": "comment.line.env-spec"
            }
          ]
        }
      }
    },

    "boolean-value": {
      "comment": "Boolean item value",
      "match": "(true|false)",
      "name": "constant.language.boolean.env-spec"
    },
    "undefined-value": {
      "comment": "Undefined item value",
      "match": "undefined",
      "name": "constant.language.undefined.env-spec"
    },
    "numeric-value": {
      "comment": "Numeric item value",
      "match": "\\b[[:digit:]]+(\\.[[:digit:]]*)?",
      "name": "constant.numeric.env-spec"
    },
    "interpolation": {
      "comment": "Interpolation (variable substitution)",
      "match": "(\\$\\{)(.*)(\\})",
      "captures": {
        "1": {
          "name": "keyword.interpolation.begin.env-spec"
        },
        "2": {
          "name": "variable.interpolation.env-spec"
        },
        "3": {
          "name": "keyword.interpolation.end.env-spec"
        }
      }
    },
    "escape-characters": {
      "comment": "Escape characters",
      "match": "\\\\[nrtfb\"'\\\\]|\\\\u[0123456789ABCDEF]{4}",
      "name": "constant.character.escape.env-spec"
    },
    "double-quoted-string": {
      "comment": "Double Quoted String",
      "match": "\"(.*)\"",
      "name": "string.quoted.double.env-spec",
      "captures": {
        "1": {
          "patterns": [
            {
              "include": "#interpolation"
            },
            {"include": "#escape-characters"}
          ]
        }
      }
    },
    "backtick-quoted-string": {
      "comment": "Backtick Quoted String",
      "match": "`(.*)`",
      "name": "string.quoted.backtick.env-spec",
      "captures": {
        "1": {
          "patterns": [
            {
              "include": "#interpolation"
            },
            {"include": "#escape-characters"}
          ]
        }
      }
    },

    "single-quoted-string": {
      "comment": "Single Quoted String",
      "match": "'(.*)'",
      "name": "string.quoted.single.env-spec"
    },
    "key": {
      "comment": "Key",
      "match": "(export\\s)?(.*)",
      "captures": {
        "1": {
          "name": "keyword.key.export.env-spec"
        },
        "2": {
          "name": "variable.key.env-spec",
          "patterns": [
            {
              "include": "#variable"
            }
          ]
        }
      }
    },

    "decorator-value": {
      "comment": "Decorator Value",
      "name": "storage.modifier.env-spec"
    },

    "decorator-name": {
      "comment": "Decorator Name",
      "match": "@[a-zA-Z][a-zA-Z0-9]+",
      "name": "support.function.env-spec"
    },

    "decorator": {
      "comment": "Decorator",
      "match": "(@[^= #]+)((=)([^\\s#]+))?",
      "captures": {
        "1": {
          "patterns": [{"include": "#decorator-name"}]
        },
        "3": {
          "name": "keyword.operator.assignment.env-spec"
        },
        "4": {
          "name": "entity.name.type.instance",
          "patterns": [{"include": "#decorator-value"}]
        }
      }
    }
  }
}
