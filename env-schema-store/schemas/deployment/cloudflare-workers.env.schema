# Cloudflare Workers Configuration
# @package wrangler @cloudflare/workers-types miniflare
# @version ^3.0.0
# @framework cloudflare-workers
# @url https://developers.cloudflare.com/workers/

# === Account & Authentication ===

# @required @secret
# @desc Cloudflare account ID
# @pattern ^[a-f0-9]{32}$
CLOUDFLARE_ACCOUNT_ID=

# @required @secret
# @desc Cloudflare API token with Workers permissions
# @pattern ^[a-zA-Z0-9_-]+$
CLOUDFLARE_API_TOKEN=

# @optional @secret
# @desc Cloudflare API key (alternative to token)
# @pattern ^[a-f0-9]{37}$
CLOUDFLARE_API_KEY=

# @optional @public
# @desc Cloudflare account email (required with API key)
# @pattern ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$
CLOUDFLARE_EMAIL=

# === Worker Configuration ===

# @optional @public
# @desc Worker script name
# @example my-worker
WORKER_NAME=

# @optional @public
# @desc Worker environment name
# @default production
# @enum development staging production
WORKER_ENV=

# @optional @public
# @desc Worker route pattern
# @example example.com/*
WORKER_ROUTE=

# @optional @public
# @desc Worker subdomain (workers.dev)
# @example my-worker
WORKERS_DEV_SUBDOMAIN=

# @optional @public @boolean
# @desc Disable workers.dev route
# @default false
WORKERS_DEV_DISABLED=

# === KV Namespaces ===

# @optional @public
# @desc KV namespace binding name
# @example MY_KV
KV_NAMESPACE=

# @optional @secret
# @desc KV namespace ID
# @pattern ^[a-f0-9]{32}$
KV_NAMESPACE_ID=

# @optional @public
# @desc Preview KV namespace ID
# @pattern ^[a-f0-9]{32}$
KV_NAMESPACE_PREVIEW_ID=

# === Durable Objects ===

# @optional @public
# @desc Durable Object namespace binding
# @example MY_DURABLE_OBJECT
DURABLE_OBJECT_NAMESPACE=

# @optional @public
# @desc Durable Object class name
# @example Counter
DURABLE_OBJECT_CLASS=

# @optional @secret
# @desc Durable Object namespace ID
# @pattern ^[a-f0-9]{32}$
DURABLE_OBJECT_ID=

# === R2 Storage ===

# @optional @public
# @desc R2 bucket binding name
# @example MY_BUCKET
R2_BUCKET=

# @optional @secret
# @desc R2 bucket name
# @example my-bucket
R2_BUCKET_NAME=

# @optional @secret
# @desc R2 access key ID
# @pattern ^[a-f0-9]{32}$
R2_ACCESS_KEY_ID=

# @optional @secret
# @desc R2 secret access key
# @pattern ^[a-zA-Z0-9+/]+={0,2}$
R2_SECRET_ACCESS_KEY=

# === D1 Database ===

# @optional @public
# @desc D1 database binding name
# @example MY_DB
D1_DATABASE=

# @optional @secret
# @desc D1 database ID
# @pattern ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
D1_DATABASE_ID=

# === Queues ===

# @optional @public
# @desc Queue binding name
# @example MY_QUEUE
QUEUE_NAME=

# @optional @secret
# @desc Queue ID
# @pattern ^[a-f0-9]{32}$
QUEUE_ID=

# === Service Bindings ===

# @optional @public
# @desc Service binding name
# @example AUTH_SERVICE
SERVICE_BINDING=

# @optional @public
# @desc Service name to bind
# @example auth-worker
SERVICE_NAME=

# @optional @public
# @desc Service environment
# @default production
SERVICE_ENV=

# === Secrets (Worker Environment Variables) ===

# @optional @secret
# @desc Generic secret value
SECRET_KEY=

# @optional @secret
# @desc API endpoint for external service
# @pattern ^https?:\/\/.+$
API_ENDPOINT=

# @optional @secret
# @desc Webhook secret for verification
# @pattern ^[a-zA-Z0-9_-]{32,}$
WEBHOOK_SECRET=

# === Development (Miniflare) ===

# @optional @public @number
# @desc Local development port
# @default 8787
# @min 1024
# @max 65535
MINIFLARE_PORT=

# @optional @public @boolean
# @desc Enable local HTTPS
# @default false
MINIFLARE_HTTPS=

# @optional @public @boolean
# @desc Enable live reload
# @default true
MINIFLARE_LIVE_RELOAD=

# @optional @public
# @desc Upstream URL for fetch passthrough
# @pattern ^https?:\/\/.+$
MINIFLARE_UPSTREAM=

# === Compatibility ===

# @optional @public
# @desc Compatibility date
# @pattern ^\d{4}-\d{2}-\d{2}$
# @example 2024-01-01
COMPATIBILITY_DATE=

# @optional @public
# @desc Compatibility flags
# @example nodejs_compat,experimental
COMPATIBILITY_FLAGS=