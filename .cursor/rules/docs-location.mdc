---
description: 
globs: 
alwaysApply: false
---
---
description: Documentation Pages Location
globs: *.mdx
---
# Documentation Pages Location

Rules for placing and organizing documentation pages in the repository.

<rule>
name: docs_location
description: Standards for placing documentation pages in the correct directory structure
filters:
  # Match any .mdx files
  - type: file_extension
    pattern: "\\.mdx$"
  # Match files that look like documentation pages
  - type: content
    pattern: "^---\\s*\\ntitle:.*\\ndescription:.*\\n---"
  # Match file creation events
  - type: event
    pattern: "file_create"

actions:
  - type: reject
    conditions:
      - pattern: "^(?!packages/varlock-website/src/content/docs/.*\\.mdx$)"
        message: "Documentation pages (.mdx) must be placed in the packages/varlock-website/src/content/docs directory"

  - type: suggest
    message: |
      When creating documentation pages:

      1. Always place documentation files in PACKAGES_ROOT/varlock-website/src/content/docs/:
         ```
         packages/varlock-website/src/content/docs/
         ├── getting-started/
         │   ├── installation.mdx
         │   └── about-env-spec.mdx
         ├── guides/
         │   ├── secrets.mdx
         │   ├── security.mdx
         │   └── ...
         └── reference/
             └── ...
         ```

      2. Follow the directory structure:
         - `getting-started/` - For introductory and setup content
         - `guides/` - For how-to guides and tutorials
         - `reference/` - For API reference and technical documentation

      3. File naming:
         - Use kebab-case for filenames
         - Always use .mdx extension
         - Make names descriptive of the content

      4. Never place documentation files:
         - In the project root
         - Outside the docs directory
         - In any other location
      
      5. Update astro.config.mjs:
         - Every documentation page must have a corresponding entry in the sidebar navigation
         - Add new pages to the appropriate section in the sidebar configuration
         - For reference pages, use the autogenerate option if appropriate
         - Example:
           ```javascript
           sidebar: [
             {
               label: 'Getting Started',
               items: [
                 { label: 'Installation', slug: 'getting-started/installation' },
                 { label: 'About env-spec', slug: 'getting-started/about-env-spec' },
               ],
             },
             {
               label: 'Guides',
               items: [
                 { label: 'Secrets', slug: 'guides/secrets' },
                 { label: 'Security', slug: 'guides/security' },
               ],
             },
             {
               label: 'Reference',
               autogenerate: { directory: 'reference' },
             },
           ]
           ```

examples:
  - input: |
      # Bad: Documentation file in wrong location
      docs/my-guide.mdx
      my-guide.mdx
      src/content/my-guide.mdx

      # Good: Documentation file in correct location
      packages/varlock-website/src/content/docs/guides/my-guide.mdx
    output: "Correctly placed documentation file"
  - input: |
      # Bad: Missing sidebar entry
      # Created file: packages/varlock-website/src/content/docs/guides/new-feature.mdx
      # But no corresponding entry in astro.config.mjs sidebar

      # Good: With sidebar entry
      # Created file: packages/varlock-website/src/content/docs/guides/new-feature.mdx
      # Added to astro.config.mjs:
      # {
      #   label: 'Guides',
      #   items: [
      #     { label: 'New Feature', slug: 'guides/new-feature' },
      #   ],
      # }
    output: "Documentation file with proper sidebar entry"


metadata:
  priority: high
  version: 1.0
  </rule>